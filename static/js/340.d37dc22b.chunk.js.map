{"version":3,"file":"static/js/340.d37dc22b.chunk.js","mappings":"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","sources":["api/hooks/categories.mock.ts","api/hooks/interest.mock.ts","api/hooks/login.mock.ts","api/hooks/products.mock.ts","api/hooks/signup.mock.ts","mocks/browser.ts"],"sourcesContent":["import { rest } from 'msw';\n\nimport { getCategoriesPath } from './useGetCategorys';\n\nexport const categoriesMockHandler = [\n  rest.get(getCategoriesPath(), (_, res, ctx) => {\n    return res(ctx.json(CATEGORIES_RESPONSE_DATA));\n  }),\n];\n\nexport const CATEGORIES_RESPONSE_DATA = [\n  {\n    id: 2920,\n    key: 'theme_birth',\n    name: '생일',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292020231106_MXMUB.png',\n    title: '감동을 높여줄 생일 선물 리스트',\n    description: '예산에 쏙쏙 맞춰 AI가 자동으로 추천드려요!',\n    color: '#5949a3',\n  },\n  {\n    id: 3303,\n    key: 'graduate_gift',\n    name: '졸업선물',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F20240214_EWQEQ.png',\n    title: '졸업을 축하하는 축하 리스트',\n    color: '#FEECE2',\n  },\n  {\n    id: 2923,\n    key: 'life_small_luxury',\n    name: '스몰럭셔리',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292320231231_EQOWK.png',\n    title: '당신을 위한 작은 사치, 스몰 럭셔리 아이템',\n    color: '#B67352',\n  },\n  {\n    id: 2925,\n    key: 'luxury',\n    name: '명품선물',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20220704190149_688ba6f4d3724d5b806554e11ef75880.jpg',\n    title: '품격있는 명품 선물 제안',\n    description: '소중한 이에게 명품의 품격을 선물하세요',\n    color: '#515c7a',\n  },\n  {\n    id: 3142,\n    key: 'life_wedding',\n    name: '결혼/집들이',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F314220231231_QTOXR.png',\n    title: '들려오는 지인들의 좋은 소식 💌',\n    description: '취향저격 감성파 vs 활용만점 실용파',\n    color: '#95785d',\n  },\n  {\n    id: 3137,\n    key: 'life_tea',\n    name: '따뜻한선물',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F313720231113_LQDZR.png',\n    title: '오늘 하루 따뜻하게 보내요',\n    description: '쌀쌀할 때 준비하면 좋은 선물🫶🏻',\n    color: '#95785d',\n  },\n  {\n    id: 2921,\n    key: 'life_small_gift',\n    name: '가벼운선물',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292120240213_MPJIS.png',\n    title: '예산은 가볍게, 감동은 무겁게❤️',\n    description: '당신의 센스를 뽐내줄 부담 없는 선물',\n    color: '#4b4d50',\n  },\n  {\n    id: 3102,\n    key: 'life_fan',\n    name: '팬심저격',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F310220240222_UJOFS.jpg',\n    title: '최애에 진심인 당신을 위한 팬심저녁 굿즈 모음',\n    color: '#333',\n  },{\n    id: 2930,\n    key: 'life_delivery',\n    name: '교환권',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240131153049_5a22b137a8d346e9beb020a7a7f4254a.jpg',\n    title: '놓치면 후회할 교환권 특가',\n    color: '#9290C3',\n  },\n  {\n    id: 3302,\n    key: 'life_health',\n    name: '건강/비타민',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20230907164349_6605944da7c24d82b9c6ed60fcb75283.jpg',\n    title: '건강을 기원하는 마음 담아 선물하세요❤️',\n    description: '홍삼 / 녹용 / 비타민 / 콜라겐 / 오메가3 / 건강즙 등',\n    color: '#fc8197',\n  },\n  {\n    id: 3301,\n    key: 'life_adult',\n    name: '과일/한우',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Fst.kakaocdn.net%2Fproduct%2Fgift%2Fproduct%2F20240213090444_1b3dc970aec54eabbf3fbb7d35c0b7af.jpg',\n    title: '정성 가득한 과일/한우 선물로 감사한 마음을 전해보세요❤️',\n    description: '과일, 한우, 수입소고기, 돼지고기, 전복, 견과 등',\n    color: '#ed6d59',\n  },\n  {\n    id: 2926,\n    key: 'life_pregnancy',\n    name: '출산/키즈',\n    imageUrl: 'https://img1.daumcdn.net/thumb/S104x104/?fname=https%3A%2F%2Ft1.daumcdn.net%2Fgift%2Fhome%2Ftheme%2F292620240221_MLFJR.jpeg',\n    title: '벅찬 감동의 마음을 전할',\n    description: '엄마와 아이를 위한 세심한 선물👼🏻',\n    color: '#fc8197',\n  },\n]","import { rest } from 'msw';\n\nimport { type InterestItem } from '@/types';\n\nimport { BASE_URL } from '../instance';\n\nconst interestDatabase: InterestItem[] = [];\nlet nextId = 1;\n\nexport const interestHandlers = [\n  // 관심 상품 목록에 등록\n  rest.post(`${BASE_URL}/api/wishes`, (req, res, ctx) => {\n    const newInterest = req.body as InterestItem;\n\n    if (!newInterest.productId) {\n      return res(ctx.status(400), ctx.json({ message: 'Invalid input' }));\n    }\n\n    // 새로운 관심 등록\n    newInterest.productId = nextId++;\n    interestDatabase.push(newInterest);\n\n    return res(ctx.status(201), ctx.json(newInterest));\n  }),\n\n  // 관심 상품 목록 조회\n  rest.get(`${BASE_URL}/api/wishes`, (req, res, ctx) => {\n    const page = parseInt(req.url.searchParams.get('page') || '0');\n    const size = parseInt(req.url.searchParams.get('size') || '10');\n    const totalItems = interestDatabase.length;\n    const totalPages = Math.ceil(totalItems / size);\n\n    const start = page * size;\n    const end = start + size;\n    const content = interestDatabase.slice(start, end);\n\n    return res(\n      ctx.status(200),\n      ctx.json({\n        content,\n        totalPages,\n        totalItems,\n        size,\n        number: page,\n        first: page === 0,\n        last: page === totalPages - 1,\n        numberOfItems: content.length,\n        empty: content.length === 0,\n      }),\n    );\n  }),\n\n  // 관심 상품 목록에서 삭제\n  rest.delete(`${BASE_URL}/api/wishes:productId`, (req, res, ctx) => {\n    const { productId } = req.params;\n    const interestIndex = interestDatabase.findIndex((interest) => interest.productId === Number(productId));\n\n    if (interestIndex === -1) {\n      return res(ctx.status(404), ctx.json({ message: 'Interest Not found' }));\n    }\n    \n    interestDatabase.splice(interestIndex, 1);\n    return res(ctx.status(204));\n  })\n];","import { rest } from 'msw';\n\nimport { BASE_URL } from '../instance';\n\ntype LoginMockRequest = {\n  email: string;\n  password: string;\n};\n\nexport const loginMockHandler = [\n  rest.post(`${BASE_URL}/api/members/login`, (req, res, ctx) => {\n    const { email, password } = req.body as LoginMockRequest;\n\n    // 임의의 아이디와 비밀번호로 로그인 성공\n    if (email === 'example@gmail.com' && password === 'example123') {\n      return res(\n        ctx.status(200),\n        ctx.json({\n          email: email,\n          token: 'example-token',\n        }),\n      );\n    }\n\n    return res(\n      ctx.status(400),\n      ctx.json({\n        message: '아이디 또는 비밀번호가 일치하지 않습니다.',\n      }),\n    );\n  }),\n];\n\nexport const kakaoLoginMockHandler = [\n  rest.get(`${BASE_URL}/api/oauth2/kakao`, (req, res, ctx) => {\n    const code = req.url.searchParams.get('code');\n    \n    if (code === 'exampleCode') {\n      return res(\n        ctx.status(200),\n        ctx.json({\n          token: 'example-token', \n        })\n      );\n    }\n\n    return res(\n      ctx.status(400),\n      ctx.json({\n        message: 'Invalid code',\n      })\n    );\n  }),\n];","import { rest } from 'msw';\n\nimport { getProductDetailPath } from './useGetProductDetail';\nimport { getProductOptionsPath } from './useGetProductOptions';\nimport { getProductsPath } from './useGetProducts';\n\nexport const productsMockHandler = [\n  rest.get(\n    getProductsPath({\n      categoryId: '2920',\n    }),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(\n    getProductsPath({\n      categoryId: '2930',\n    }),\n    (_, res, ctx) => {\n      return res(ctx.json(PRODUCTS_MOCK_DATA));\n    },\n  ),\n  rest.get(getProductDetailPath(':productId'), (req, res, ctx) => {\n    const { productId } = req.params as { productId: string };\n    const product = PRODUCTS_MOCK_DATA.content.find(p => p.id === parseInt(productId, 10));\n    \n    if (product) {\n      return res(ctx.json(product));\n    } else {\n      return res(\n        ctx.status(404),\n        ctx.json({ errorMessage: 'Product not found' }),\n      );\n    }\n  }),\n  rest.get(getProductOptionsPath(':productId'), (_, res, ctx) => {\n    return res(\n      ctx.json([\n        {\n          id: 1,\n          name: 'Option A',\n          quantity: 10,\n          productId: 1,\n        },\n        {\n          id: 2,\n          name: 'Option B',\n          quantity: 20,\n          productId: 1,\n        },\n      ]),\n    );\n  }),\n];\n\nexport const PRODUCTS_MOCK_DATA = {\n  content: [\n    {\n      id: 3245119,\n      name: '[단독각인] 피렌체 1221 에디션 오드코롱 50ml (13종 택1)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215083306_8e1db057580145829542463a84971ae3.png',\n      price: 145000,\n    },\n    {\n      id: 2263833,\n      name: '외식 통합권 10만원권',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20200513102805_4867c1e4a7ae43b5825e9ae14e2830e3.png',\n      price: 100000,\n    },\n    {\n      id: 6502823,\n      name: '[선물포장/미니퍼퓸증정] 디켄터 리드 디퓨저 300ml + 메세지카드',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240215112140_11f857e972bc4de6ac1d2f1af47ce182.jpg',\n      price: 108000,\n    },\n    {\n      id: 1181831,\n      name: '[선물포장] 소바쥬 오 드 뚜왈렛 60ML',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240214150740_ad25267defa64912a7c030a7b57dc090.jpg',\n      price: 122000,\n    },\n    {\n      id: 1379982,\n      name: '[정관장] 홍삼정 에브리타임 리미티드 (10ml x 30포)',\n      imageUrl:\n        'https://st.kakaocdn.net/product/gift/product/20240118135914_a6e1a7442ea04aa49add5e02ed62b4c3.jpg',\n      price: 133000,\n    },\n  ],\n  number: 0,\n  totalElements: 5,\n  size: 10,\n  last: true,\n};\n","import { rest } from 'msw';\n\nimport { BASE_URL } from '../instance';\n\ntype SignupMockRequest = {\n  email: string;\n  password: string;\n};\n\nconst usersDatabase: { email: string, password: string }[] = [\n  { email: 'example@gmail.com', password: 'example123' },\n];\n\nexport const signupHandler = [\n  rest.post(`${BASE_URL}/api/members/register`, (req, res, ctx) => {\n    const { email, password } = req.body as SignupMockRequest;\n\n    // 이미 존재하는 사용자인지 확인\n    const isExistingUser = usersDatabase.find((user) => user.email=== email);\n    if (isExistingUser) {\n      return res(ctx.status(400), ctx.json({ message: '이미 사용 중인 이메일입니다.' }));\n    }\n\n    // 사용자 추가\n    usersDatabase.push({ email, password });\n    \n    // 디버깅용 로그\n    console.log('usersDatabase:', usersDatabase);\n\n    // 회원가입 성공\n    return res(ctx.status(200), ctx.json({ email: email, token: 'example-token' })); \n  }),\n];","import { setupWorker } from 'msw';\n\nimport { categoriesMockHandler } from '@/api/hooks/categories.mock';\nimport { interestHandlers } from '@/api/hooks/interest.mock';\nimport { kakaoLoginMockHandler, loginMockHandler } from '@/api/hooks/login.mock';\nimport { productsMockHandler } from '@/api/hooks/products.mock';\nimport { signupHandler } from '@/api/hooks/signup.mock';\n\nexport const worker = setupWorker(...categoriesMockHandler, ...interestHandlers, ...loginMockHandler, ...kakaoLoginMockHandler, ...productsMockHandler, ...signupHandler);\n"],"names":["categoriesMockHandler","rest","get","getCategoriesPath","_","res","ctx","json","CATEGORIES_RESPONSE_DATA","id","key","name","imageUrl","title","description","color","interestDatabase","nextId","interestHandlers","post","concat","BASE_URL","req","newInterest","body","productId","push","status","message","page","parseInt","url","searchParams","size","totalItems","length","totalPages","Math","ceil","start","end","content","slice","number","first","last","numberOfItems","empty","delete","params","interestIndex","findIndex","interest","Number","splice","loginMockHandler","email","password","token","kakaoLoginMockHandler","productsMockHandler","getProductsPath","categoryId","PRODUCTS_MOCK_DATA","getProductDetailPath","product","find","p","errorMessage","getProductOptionsPath","quantity","price","totalElements","usersDatabase","signupHandler","user","console","log","worker","setupWorker"],"sourceRoot":""}